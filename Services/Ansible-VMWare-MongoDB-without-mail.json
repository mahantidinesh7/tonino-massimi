{
  "service": {
    "version": "1.0.0.0",
    "specVersion": "v3",
    "catalog_metadata": {
      "name": "Ansible-VMWare-MongoDB-without-mail",
      "description": "Deploy MongoDB server on VMWare and Create Ansible Credential and Inventory to run on it Ansible Job Template",
      "image": "serviceicon_1.svg",
      "category": "Tonino",
      "bullets": [],
      "providerDisplayName": "IBM",
      "longDescription": "Provision Action steps:\n- Deploy MongoDB Server (MongoDB on a Single VM on VMware)\n- Create Ansible Credential with User Password\n- Create Ansible Inventory\n- Run ansible job named \"System Information svt new\" to get OS Infos\n- Send e-mail with result\nCustom Action\n- Run ansible job named \"System Information svt new\" to get OS Infos\n- Send e-mail with result",
      "documentationUrl": "",
      "supportUrl": "",
      "bindable": false,
      "updatable": "",
      "systemTags": true
    },
    "tags": [
      {
        "name": "request_group",
        "label": "request_group",
        "type": "string",
        "immutable": true,
        "hidden": false,
        "required": false,
        "secured": false,
        "description": "The current context group id of the current user that requested the provisioning of the template. This is important because a user may be part of more than one group and this identifies the context of which group the user made the request.",
        "isSystemTag": true,
        "default": "${svc_instance.group}",
        "customtype": "string",
        "permission": "Read-Only"
      },
      {
        "name": "request_user",
        "label": "request_user",
        "type": "string",
        "immutable": true,
        "hidden": false,
        "required": false,
        "secured": false,
        "description": "The user id of the current user that requested the provisioning of the template.",
        "isSystemTag": true,
        "default": "${svc_instance.owner}",
        "customtype": "string",
        "permission": "Read-Only"
      },
      {
        "name": "service_name",
        "label": "service_name",
        "type": "string",
        "immutable": true,
        "hidden": false,
        "required": false,
        "secured": false,
        "description": "Name provided for the service instance by the end user at time of request",
        "isSystemTag": true,
        "default": "${svc_instance.name}",
        "customtype": "string",
        "permission": "Read-Only"
      },
      {
        "name": "service_identifier",
        "label": "service_identifier",
        "type": "string",
        "immutable": true,
        "hidden": false,
        "required": false,
        "secured": false,
        "description": "Unique identifer generated by ICAM which is mapped to the service instance of the template provisioned.",
        "isSystemTag": true,
        "default": "${svc_instance.service_instance_id}",
        "customtype": "string",
        "permission": "Read-Only"
      }
    ],
    "actions": [
      {
        "type": "provision",
        "name": "Provision",
        "description": "Default action for deployment of service",
        "input_parameters": [
          {
            "name": "vm_ip",
            "label": "IP",
            "customtype": "string",
            "type": "string",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "isDynamic": false,
            "default": "9.37.194.18"
          },
          {
            "name": "user",
            "label": "User",
            "customtype": "string",
            "type": "string",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "description": "",
            "isDynamic": false,
            "default": "root"
          },
          {
            "name": "password",
            "label": "Password",
            "customtype": "password",
            "type": "password",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": true,
            "description": "",
            "isDynamic": false,
            "default": "^(cGFzc3cwcmQ=)",
            "passbyname": false,
            "dynamicDetails": {}
          },
          {
            "name": "variable-test",
            "label": "Variable Test",
            "customtype": "map",
            "type": "map",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "description": "Variable Test",
            "isDynamic": false,
            "editable": true,
            "default": {
              "test": "Service Instance version 1.0.0.0"
            }
          },
          {
            "name": "disksize",
            "label": "Disk Size",
            "customtype": "string",
            "type": "string",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "isDynamic": false,
            "editable": true,
            "default": "100"
          },
          {
            "name": "hostname",
            "label": "Hostname",
            "customtype": "string",
            "type": "string",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "isDynamic": false,
            "editable": true,
            "default": "mongodb-vm-for-ansible"
          }
        ],
        "flow": {
          "conditions": [],
          "templates": [
            {
              "MongoDB on a Single VM on VMware": {
                "title": "MongoDB on a Single VM on VMware_e3a6cd",
                "template_name": "MongoDB on a Single VM on VMware",
                "version": "2.3",
                "id": "mongodbo15cad7df",
                "template_type": "Terraform",
                "template_content_type": "VMware vSphere",
                "template_provider": "VMware vSphere",
                "instance_name": "",
                "cloud_connection_name": "FIT3",
                "template_data_objects": {
                  "bastionhost": "DefaultNoBastionHostRequired",
                  "httpproxy": "DefaultNoProxyRequired"
                },
                "template_params": {
                  "mongodb_vm_name": "${input_parameters.hostname}",
                  "mongodb_vm_dns_servers": [
                    "9.42.106.2",
                    "9.42.106.3"
                  ],
                  "mongodb_vm_dns_suffixes": [
                    "rtp.raleigh.ibm.com"
                  ],
                  "mongodb_vm_domain": "rtp.raleigh.ibm.com",
                  "mongodb_vm_image": "CAM-ManageToTemplate/ContentRH7_Template_ONEDISK",
                  "mongodb_vm_root_disk_size": "${input_parameters.disksize}",
                  "mongodb_vm_root_disk_controller_type": "scsi",
                  "mongodb_vm_root_disk_datastore": "p_18980aef-6866-42b7-bb2f-5c9093f58a47",
                  "mongodb_vm_root_disk_type": "eager_zeroed",
                  "mongodb_vm_ipv4_gateway": "9.37.194.1",
                  "mongodb_vm_ipv4_address": "${input_parameters.vm_ip}",
                  "mongodb_vm_memory": "4096",
                  "mongodb_vm_ipv4_prefix_length": "24",
                  "mongodb_vm_number_of_vcpu": "1",
                  "mongodb_vm_network_interface_label": "840",
                  "mongodb_vm_cluster": "camTest",
                  "mongodb_vm_datacenter": "Rack-8283_1000167",
                  "mongodb_vm_folder": "CAM-ENV",
                  "mongodb_vm_adapter_type": "vmxnet3",
                  "mongodb_vm_resource_pool": "campool",
                  "ssh_user": "${input_parameters.user}",
                  "ssh_user_password": "^(cGFzc3cwcmQ=)"
                },
                "outputs": [
                  "db_server_ip_address"
                ],
                "immutable": false,
                "provider_engine_version": "0.11.11",
                "isErrorFlow": false
              }
            },
            {
              "Credential": {
                "title": "Credential_1bc973",
                "template_name": "Credential",
                "version": "1.0",
                "id": "credenti741f5d15",
                "template_type": "ANSIBLE",
                "template_content_type": "ANSIBLE",
                "template_provider": "ANSIBLE",
                "instance_name": "",
                "cloud_connection_name": "AnsibleTower",
                "template_data_objects": {},
                "template_params": {
                  "credential_name_suffix": "SVT-MongoDB-Creds",
                  "user_name": "${input_parameters.user}",
                  "ssh_private_key": "",
                  "password": "${input_parameters.password}"
                },
                "outputs": [
                  "credential_name"
                ],
                "immutable": false,
                "isErrorFlow": false
              }
            },
            {
              "Inventory": {
                "title": "Inventory_575990",
                "template_name": "Inventory",
                "version": "1.0",
                "id": "inventor370f52ee",
                "template_type": "ANSIBLE",
                "template_content_type": "ANSIBLE",
                "template_provider": "ANSIBLE",
                "instance_name": "",
                "cloud_connection_name": "AnsibleTower",
                "template_data_objects": {},
                "template_params": {
                  "organizationName": "Default",
                  "inventoryName": "SVT-MongoDB-Inve",
                  "extraVars": {
                    "version": "1.9",
                    "release": "original",
                    "key1": "value1"
                  },
                  "hostgroup": {
                    "Default": "${templates.mongodbo15cad7df.output.db_server_ip_address}",
                    "web": "${templates.mongodbo15cad7df.output.db_server_ip_address}"
                  }
                },
                "outputs": [
                  "inventory_name"
                ],
                "immutable": false,
                "provider_engine_version": "1.0",
                "isErrorFlow": false
              }
            },
            {
              "System Information svt new": {
                "title": "System Information svt new_cbe96b",
                "template_name": "System Information svt new",
                "version": "1.0",
                "id": "systemin6f36a42b",
                "template_type": "ANSIBLE",
                "template_content_type": "ANSIBLE",
                "template_provider": "ANSIBLE",
                "instance_name": "",
                "cloud_connection_name": "AnsibleTower",
                "template_data_objects": {},
                "template_params": {
                  "inventory_name": "${templates.inventor370f52ee.output.inventory_name}",
                  "credential_name": "${templates.credenti741f5d15.output.credential_name}",
                  "extra_variables": {}
                },
                "outputs": [
                  "job_status"
                ],
                "isErrorFlow": false,
                "editable": true
              }
            },
            {
              "Create version file": {
                "title": "Create version file_ce10ca",
                "template_name": "Create version file",
                "version": "1.0",
                "id": "createve36ae16df",
                "template_type": "ANSIBLE",
                "template_content_type": "ANSIBLE",
                "template_provider": "ANSIBLE",
                "instance_name": "",
                "cloud_connection_name": "AnsibleTower",
                "template_data_objects": {},
                "template_params": {
                  "inventory_name": "${templates.inventor370f52ee.output.inventory_name}",
                  "credential_name": "${templates.credenti741f5d15.output.credential_name}",
                  "extra_variables": "${input_parameters.variable-test}"
                },
                "outputs": [
                  "job_status"
                ],
                "editable": true,
                "isErrorFlow": false
              }
            }
          ],
          "resthooks": [],
          "notifications": [],
          "sequence": {
            "0": "mongodbo15cad7df",
            "1": "credenti741f5d15",
            "2": "inventor370f52ee",
            "3": "systemin6f36a42b",
            "4": "createve36ae16df"
          },
          "error_sequence": {}
        },
        "output_parameters": [
          {
            "name": "inventory_name",
            "label": "inventory_name",
            "customtype": "string",
            "type": "string",
            "immutable": true,
            "hidden": false,
            "required": false,
            "secured": false,
            "description": "inventory_name",
            "default": "${templates.inventor370f52ee.output.inventory_name}"
          },
          {
            "name": "credential_name",
            "label": "credential_name",
            "customtype": "string",
            "type": "string",
            "immutable": true,
            "hidden": false,
            "required": false,
            "secured": false,
            "description": "credential_name",
            "default": "${templates.credenti741f5d15.output.credential_name}"
          }
        ]
      },
      {
        "type": "custom",
        "name": "Get System Infos",
        "description": "Ansible job System Information svt new",
        "input_parameters": [],
        "flow": {
          "conditions": [],
          "templates": [
            {
              "System Information svt new": {
                "title": "System Information svt new_bfb4ca",
                "template_name": "System Information svt new",
                "version": "1.0",
                "id": "systeminff71b9b7",
                "template_type": "ANSIBLE",
                "template_content_type": "ANSIBLE",
                "template_provider": "ANSIBLE",
                "instance_name": "",
                "cloud_connection_name": "AnsibleTower",
                "template_data_objects": {},
                "template_params": {
                  "inventory_name": "${svc_instance.output_parameters.inventory_name}",
                  "credential_name": "${svc_instance.output_parameters.credential_name}",
                  "extra_variables": {}
                },
                "outputs": [
                  "job_status"
                ],
                "editable": true
              }
            }
          ],
          "resthooks": [],
          "notifications": [],
          "sequence": {
            "0": "systeminff71b9b7"
          },
          "error_sequence": {}
        },
        "output_parameters": []
      },
      {
        "type": "custom",
        "name": "Delete File Version",
        "description": "Delete File Version",
        "pre_or_post": true,
        "input_parameters": [],
        "flow": {
          "conditions": [],
          "templates": [
            {
              "Delete File": {
                "title": "Delete File_c0797d",
                "template_name": "Delete File",
                "version": "1.0",
                "id": "deletefi7205d875",
                "template_type": "ANSIBLE",
                "template_content_type": "ANSIBLE",
                "template_provider": "ANSIBLE",
                "instance_name": "",
                "cloud_connection_name": "AnsibleTower",
                "template_data_objects": {},
                "template_params": {
                  "inventory_name": "${svc_instance.output_parameters.inventory_name}",
                  "credential_name": "${svc_instance.output_parameters.credential_name}",
                  "extra_variables": {}
                },
                "outputs": [
                  "job_status"
                ],
                "editable": true,
                "isErrorFlow": false
              }
            }
          ],
          "resthooks": [],
          "notifications": [],
          "sequence": {
            "0": "deletefi7205d875"
          },
          "error_sequence": {}
        },
        "output_parameters": []
      }
    ],
    "plans": [
      {
        "name": "Standard",
        "description": "To deploy a Standard plan",
        "actions": [],
        "plan_parameters": []
      }
    ]
  }
}