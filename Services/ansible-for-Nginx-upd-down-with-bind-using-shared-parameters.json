{
  "service": {
    "specVersion": "v3",
    "catalog_metadata": {
      "name": "ansible-for-Nginx-upd-down",
      "description": "",
      "image": "serviceicon_1.svg",
      "category": "Tonino",
      "bullets": [],
      "providerDisplayName": "IBM",
      "longDescription": "",
      "documentationUrl": "",
      "supportUrl": "",
      "bindable": true,
      "updatable": "",
      "systemTags": true,
      "author": "admin",
      "tag": "5dc14eb48758ac001f199222",
      "tagId": "5dc14eb48758ac001f199222",
      "tenantId": "88c2dc7a-940f-42fc-916f-dc62465746c3",
      "spaceGuid": "default",
      "orgGuid": "all",
      "namespaceId": "default",
      "specVersion": "v3",
      "conditions": [
        [],
        [],
        []
      ],
      "template_mapping": {
        "Ago Amazon EC2 Virtual Server with SSH key v2": "agoamazoae85837a",
        "Credential": "credenti70238536",
        "Inventory": "inventor8151fa4f",
        "System Information": "systemin5fd4f92e",
        "Hello World": "hellowor9082579f"
      },
      "tags": [
        {
          "name": "request_group",
          "label": "request_group",
          "type": "string",
          "immutable": true,
          "hidden": false,
          "required": false,
          "secured": false,
          "description": "The current context group id of the current user that requested the provisioning of the template. This is important because a user may be part of more than one group and this identifies the context of which group the user made the request.",
          "isSystemTag": true,
          "default": "${svc_instance.group}",
          "customtype": "string",
          "permission": "Read-Only"
        },
        {
          "name": "request_user",
          "label": "request_user",
          "type": "string",
          "immutable": true,
          "hidden": false,
          "required": false,
          "secured": false,
          "description": "The user id of the current user that requested the provisioning of the template.",
          "isSystemTag": true,
          "default": "${svc_instance.owner}",
          "customtype": "string",
          "permission": "Read-Only"
        },
        {
          "name": "service_name",
          "label": "service_name",
          "type": "string",
          "immutable": true,
          "hidden": false,
          "required": false,
          "secured": false,
          "description": "Name provided for the service instance by the end user at time of request",
          "isSystemTag": true,
          "default": "${svc_instance.name}",
          "customtype": "string",
          "permission": "Read-Only"
        },
        {
          "name": "service_identifier",
          "label": "service_identifier",
          "type": "string",
          "immutable": true,
          "hidden": false,
          "required": false,
          "secured": false,
          "description": "Unique identifer generated by ICAM which is mapped to the service instance of the template provisioned.",
          "isSystemTag": true,
          "default": "${svc_instance.service_instance_id}",
          "customtype": "string",
          "permission": "Read-Only"
        }
      ],
      "actions": {
        "ans-act-orig": "5dcbd42ead14130018301874",
        "Provision": "5dc95e2e8b2a700019a3440b",
        "ans-act": "5dc95e2e8b2a700019a3440c"
      },
      "plans": {
        "Standard": "5dc95e2e8b2a700019a3440a"
      },
      "lastUpdated": "2019-11-13T10:00:14.350Z"
    },
    "tags": [
      {
        "name": "request_group",
        "label": "request_group",
        "type": "string",
        "immutable": true,
        "hidden": false,
        "required": false,
        "secured": false,
        "description": "The current context group id of the current user that requested the provisioning of the template. This is important because a user may be part of more than one group and this identifies the context of which group the user made the request.",
        "isSystemTag": true,
        "default": "${svc_instance.group}",
        "customtype": "string",
        "permission": "Read-Only"
      },
      {
        "name": "request_user",
        "label": "request_user",
        "type": "string",
        "immutable": true,
        "hidden": false,
        "required": false,
        "secured": false,
        "description": "The user id of the current user that requested the provisioning of the template.",
        "isSystemTag": true,
        "default": "${svc_instance.owner}",
        "customtype": "string",
        "permission": "Read-Only"
      },
      {
        "name": "service_name",
        "label": "service_name",
        "type": "string",
        "immutable": true,
        "hidden": false,
        "required": false,
        "secured": false,
        "description": "Name provided for the service instance by the end user at time of request",
        "isSystemTag": true,
        "default": "${svc_instance.name}",
        "customtype": "string",
        "permission": "Read-Only"
      },
      {
        "name": "service_identifier",
        "label": "service_identifier",
        "type": "string",
        "immutable": true,
        "hidden": false,
        "required": false,
        "secured": false,
        "description": "Unique identifer generated by ICAM which is mapped to the service instance of the template provisioned.",
        "isSystemTag": true,
        "default": "${svc_instance.service_instance_id}",
        "customtype": "string",
        "permission": "Read-Only"
      }
    ],
    "actions": [
      {
        "type": "provision",
        "name": "Provision",
        "description": "Default action for deployment of service",
        "input_parameters": [
          {
            "name": "az",
            "label": "AZ",
            "customtype": "string",
            "type": "string",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "description": "AZ",
            "default": "us-east-1b",
            "editable": true
          },
          {
            "name": "ssh-key-name",
            "label": "SSH Key Name",
            "customtype": "string",
            "type": "string",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "description": "SSH Key Name",
            "default": "tm-anskey-000",
            "editable": true
          },
          {
            "name": "user",
            "label": "User",
            "customtype": "string",
            "type": "string",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "description": "User",
            "default": "ubuntu",
            "editable": true
          },
          {
            "name": "type",
            "label": "Instance Type",
            "customtype": "string",
            "type": "string",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "description": "Instance Type",
            "default": "t2.medium",
            "editable": true
          },
          {
            "name": "ssh-key-pub",
            "label": "SSH Key Pub",
            "customtype": "sharedparameter",
            "type": "sharedparameter",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "description": "SSH Key Pub",
            "isDynamic": false,
            "default": "pub-ssh",
            "datatype": "public-ssh",
            "editable": true,
            "passbyname": false,
            "dynamicDetails": {}
          },
          {
            "name": "tls-key-64-encode",
            "label": "TLS Key 64 Encode",
            "customtype": "sharedparameter",
            "type": "sharedparameter",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "description": "TLS Key 64 Encode",
            "isDynamic": false,
            "default": "b64-ssh",
            "editable": true,
            "datatype": "base64-ssh",
            "passbyname": false,
            "dynamicDetails": {}
          },
          {
            "name": "ssh-key-prv",
            "label": "SSH Key PRV",
            "customtype": "sharedparameter",
            "type": "sharedparameter",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "description": "SSH Key PRV",
            "isDynamic": false,
            "default": "pri-ssh",
            "editable": true,
            "datatype": "private-ssh",
            "passbyname": false,
            "dynamicDetails": {}
          },
          {
            "name": "variable-test",
            "label": "Variable Test",
            "customtype": "map",
            "type": "map",
            "immutable": false,
            "hidden": false,
            "required": false,
            "secured": false,
            "description": "Variable Test",
            "isDynamic": false,
            "editable": true,
            "default": {
              "test": "at deploy 1.0.0.0"
            },
            "passbyname": false,
            "dynamicDetails": {}
          }
        ],
        "flow": {
          "conditions": [],
          "templates": [
            {
              "Ago Amazon EC2 Virtual Server with SSH key v2": {
                "title": "Ago Amazon EC2 Virtual Server with SSH key v2",
                "template_name": "Ago Amazon EC2 Virtual Server with SSH key v2",
                "version": "master",
                "id": "agoamazoae85837a",
                "template_type": "Terraform",
                "template_content_type": "Amazon EC2",
                "template_provider": "Amazon EC2",
                "instance_name": "",
                "cloud_connection_name": "AWS",
                "template_data_objects": {},
                "template_params": {
                  "hostname-tag": "tonino-ec2",
                  "aws_region": "us-east-1",
                  "vpc_name_tag": "CAMVPC",
                  "subnet_name": "CAM",
                  "aws_image_size": "t2.small",
                  "public_ssh_key_name": "${input_parameters.ssh-key-name}",
                  "public_ssh_key": "${datatypes.public-ssh.pub-ssh}",
                  "aws_image": "ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-*",
                  "aws_ami_owner_id": "099720109477"
                },
                "outputs": [
                  "public_ip"
                ],
                "error": false,
                "isErrorFlow": false,
                "warning": false,
                "provider_engine_version": "0.11.11",
                "editable": true
              }
            },
            {
              "Credential": {
                "title": "Credential_4b78dc",
                "template_name": "Credential",
                "version": "1.0",
                "id": "credenti70962c42",
                "template_type": "ANSIBLE",
                "template_content_type": "ANSIBLE",
                "template_provider": "ANSIBLE",
                "instance_name": "",
                "cloud_connection_name": "AnsibleTower",
                "template_data_objects": {},
                "template_params": {
                  "credential_name_suffix": "tm-creds-aws",
                  "user_name": "${input_parameters.user}",
                  "ssh_private_key": "${datatypes.base64-ssh.bas64-ssh}",
                  "password": ""
                },
                "outputs": [
                  "credential_name"
                ],
                "error": false,
                "isErrorFlow": false,
                "warning": false,
                "editable": true
              }
            },
            {
              "Inventory": {
                "title": "Inventory_f0b487",
                "template_name": "Inventory",
                "version": "1.0",
                "id": "inventordc5a839f",
                "template_type": "ANSIBLE",
                "template_content_type": "ANSIBLE",
                "template_provider": "ANSIBLE",
                "instance_name": "",
                "cloud_connection_name": "AnsibleTower",
                "template_data_objects": {},
                "template_params": {
                  "organizationName": "Default",
                  "inventoryName": "tm-inventory",
                  "extraVars": {
                    "version": "1.9",
                    "release": "original",
                    "key1": "value1"
                  },
                  "hostgroup": {
                    "Default": "${templates.agoamazoae85837a.output.public_ip}",
                    "web": "${templates.agoamazoae85837a.output.public_ip}"
                  }
                },
                "outputs": [
                  "inventory_name"
                ],
                "provider_engine_version": "1.0",
                "isErrorFlow": false,
                "editable": true
              }
            },
            {
              "Hello World": {
                "title": "Hello World_87fa45",
                "template_name": "Hello World",
                "version": "1.0",
                "id": "helloworf00498f8",
                "template_type": "ANSIBLE",
                "template_content_type": "ANSIBLE",
                "template_provider": "ANSIBLE",
                "instance_name": "",
                "cloud_connection_name": "AnsibleTower",
                "template_data_objects": {},
                "template_params": {
                  "inventory_name": "${templates.inventordc5a839f.output.inventory_name}",
                  "credential_name": "${templates.credenti70962c42.output.credential_name}",
                  "extra_variables": "${input_parameters.variable-test}"
                },
                "outputs": [
                  "job_status"
                ],
                "editable": true,
                "isErrorFlow": false
              }
            }
          ],
          "resthooks": [],
          "notifications": [],
          "sequence": {
            "0": "agoamazoae85837a",
            "1": "credenti70962c42",
            "2": "inventordc5a839f",
            "3": "helloworf00498f8"
          },
          "error_sequence": {}
        },
        "output_parameters": [
          {
            "name": "web_server_ip_address",
            "label": "web_server_ip_address",
            "customtype": "string",
            "type": "string",
            "immutable": true,
            "hidden": false,
            "required": false,
            "secured": false,
            "description": "web_server_ip_address",
            "default": "${templates.agoamazoae85837a.output.public_ip}"
          },
          {
            "name": "tls-private-key",
            "label": "tls-private-key",
            "customtype": "string",
            "type": "string",
            "immutable": true,
            "hidden": false,
            "required": false,
            "secured": false,
            "description": "tls-private-key",
            "default": "LS0tLS1CRUdJTiBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS0NCmIzQmxibk56YUMxclpYa3RkakVBQUFBQUJHNXZibVVBQUFBRWJtOXVaUUFBQUFBQUFBQUJBQUFCbHdBQUFBZHpjMmd0Y24NCk5oQUFBQUF3RUFBUUFBQVlFQXNMaXBBSVE3dUxJVWdxT01tSGlhL3RtVStpUlhsbzR3VUQ3YkN3dHRuWW5HVGpjUWMraDgNCmRQSkxyYWpwZnhFN05tTGIweTNiQXBHUzQwLzV6WENpTVQ0UTduYTRVaHYwZXhIdjZhUCsxckdWRW9QNDR0T0dBWXlzRVINCm9XSHBqUCs1OVpNcW1sbE9XNUViazk1YW5zTkd2SW9mSC9uZFg5ZjVYNTNod0dJMUZEVGNJakt6MHgrd0lhWGdSZWJhN1gNCm9FRVVQZ0I0OG1EdmxRdk83SWdrREVCK2RBUktiUGpkOHkrQjA3UWdORGYwVWVoSjZmV0JPK2tSL0kyM2l5YXJybS9GRUsNCnZHOU03NEFXejB0MjVsTUo4M2VlTWtuNmxnS1pmY3pmYmVQRVg4T0UwbGxJWDgvU3VKc1Z5aTU3VWlFZzFBUlhoQWcvQlUNClJtalpwNWxKYjVLdUMybG1xYm51cEhrYy9NUmJLM0hhek0vKzNVcVJwY1VCNGw1Z1FoM2ZSdkJ0djFMNmxLK0VWS2lSTlANCmNBZUZxZkNqRDVaSXhFOHJ6TXBUOUs2TC9TTkxpMEFNbDc0d3F6MFZDNkdjSGtUdHhuL1kydGRQeStVNHpuZkVEMUpEWDkNCmo0NEJQRHM4emdYUlZENWhmdTNsTFpBaHc3Z3F4VllTUy9tcHdLbWhBQUFGb0pxTlY5T2FqVmZUQUFBQUIzTnphQzF5YzINCkVBQUFHQkFMQzRxUUNFTzdpeUZJS2pqSmg0bXY3WmxQb2tWNWFPTUZBKzJ3c0xiWjJKeGs0M0VIUG9mSFR5UzYybzZYOFINCk96WmkyOU10MndLUmt1TlArYzF3b2pFK0VPNTJ1RkliOUhzUjcrbWovdGF4bFJLRCtPTFRoZ0dNckJFYUZoNll6L3VmV1QNCktwcFpUbHVSRzVQZVdwN0RScnlLSHgvNTNWL1grVitkNGNCaU5SUTAzQ0l5czlNZnNDR2w0RVhtMnUxNkJCRkQ0QWVQSmcNCjc1VUx6dXlJSkF4QWZuUUVTbXo0M2ZNdmdkTzBJRFEzOUZIb1NlbjFnVHZwRWZ5TnQ0c21xNjV2eFJDcnh2VE8rQUZzOUwNCmR1WlRDZk4zbmpKSitwWUNtWDNNMzIzanhGL0RoTkpaU0YvUDByaWJGY291ZTFJaElOUUVWNFFJUHdWRVpvMmFlWlNXK1MNCnJndHBacW01N3FSNUhQekVXeXR4MnN6UC90MUtrYVhGQWVKZVlFSWQzMGJ3YmI5UytwU3ZoRlNva1RUM0FIaGFud293K1cNClNNUlBLOHpLVS9TdWkvMGpTNHRBREplK01LczlGUXVobkI1RTdjWi8yTnJYVDh2bE9NNTN4QTlTUTEvWStPQVR3N1BNNEYNCjBWUStZWDd0NVMyUUljTzRLc1ZXRWt2NXFjQ3BvUUFBQUFNQkFBRUFBQUdCQUplNElkZ0FydWsxY2locVUwVi9uY29ZY1MNCitFVGZKQzVyV3VFUTVkWkdGeExHQndJOTd2QlJLK0JqejBuR3BzRjhMc2dyKytTWjNkN3hiYXphTVVCUnR6cHNPa0IwRHYNCklTa2IwRFp0aGxjNkpMcTl0TXJBUVBkSmwxd2pZa1FvZTc4U0lsazlqcHZUMGR5bWhiNkw4TzljYmVhalJncHk4bTA4REUNCllsRnh2eEkzQTVzVW5wQXVUMS9EOGxUeENwb0JQRWE2V0RjRkxlNkRHMDdwVGhtTmt2OGFDWEluS0dBcjlLMVJJMVBjUzMNCkdUbk16TkJnNXUvUmZKQ3Y5cGt2dTU0TGw4Z3FGL0xpTExsdE0vNEdBSUF0cXdvMGt6UEg2NkFLdWJsRTRWUlZMVnI3NkYNCjZkaEhST2FpYzB6eWVvanoxdzZNdGlhSGdWbTVxemZsRTBFME5LZVpGZGYxdDVJSVlPelJTbjVOdjg2M1ZLVkRXUFhPYWUNCkZzWWJxS2FVTlF6VkNnWTlva1ZDeHZUSlVxWkxuSDBPNkV5UjNXVis5VHNyTkJzRVV5azZPeFNZZ0F3b0x3UjZ2L1Y2VUoNCnBqYm5Ka2hqN2phSkNGZVlmbVU3eHhYQmRmNWFpREo2b3ZpajFKVUlVb01PQTdUWXNlVTBOYlBDRmxseFdTY2ZCanNRQUENCkFNRUFnS1RibEo1TVNrLzdNN3diNzk3Zll2cGM4TzhPSXd4Kzh6S0k2SU1BNEJTS2xwTWdlMVBtYTRyTVVLNisyK2pMZHMNCm5nTDRkSEpUUWVYQ2kzRVQwVzJiNng1VlpLK0JIY2VPa1FPSDRmMnFkdFJ2dzRqMWt6OHhXcmFRaktpem1mL3ZEbXV2aisNCmpseXBFK2dxM0I0bVlyNkNyM3lXTHcxbElnVDFYdWdkbzVHSFFPTTRXQnVPNk1Va1RDK2VReXU5czB3ckxZSzhpa1JVRkUNCkFLL3RRaSt3OElkclRHTUNYMi9BTVFpb0grODVSQnFOcW03eXg3Tm5wc3FCSnloY1NFQUFBQXdRRFhORFBNUFdPa0dlVjENCkRDMEJRSXFibktwT0NWUmU5VXN1K2xFMnBvODhNWXF4bkRDcVFVbXNWTUxtazNmMWQ4YU4rU3VjM25lL2NSa2NuVWlFKzkNCkZPTzZzcDg0amQxbDR3Um5KTVdobi9zdjlJVXBZUW8rc3YwdVFuTnE1OVZXUkFjN29rVU9tU2VseVpraVhtYXRIM1htUzgNCkxmU1d3V3oxNWlyWVdvdE0vbWp2ZmordUd3Zmg4djJBVGxGYkpibkc1aFVNMVdnMm9EdGlvMEkxL1pOSk9xSlArdFhPVkgNCjFVUnBvUGVwZk9TanZycDJxT3M4aVlvYmp3ZG1pMXlQVUFBQURCQU5JNDZCTnZGV1RST3FBcm9ZQWxBYWEyZldTUUFORVYNCnRRN2xzdGo5SFpRTzlTd1IyWWJpclZqY2JPZjBrNkg1NmpFT1Iwd3cvZDMvc3VwSVlBWm1QK1JQQ2x5STdERkVmYUo2WGoNCkxlcmZmMGZvUkVsVnRwRjdMY0hzSXFHMkU4anlybEhpclpuK2MzcVVTMUFpZm5kQjVvOFA2ZXNHcFAwTklzQ3AySUhjVkYNCmhCN0N4N0U3V1ZvOVphQ2xJSFVIWjBjUUJnRVVDUW9uMmNtdDkxdzNUZXhxeUlWNHBKZHVrS1R1bXAwTlpWemlTOHZNZ1MNCm8wVFFGdzF3d3pkdmtpZlFBQUFDVkJlblZ5WlVGRUsxUnZibWx1YjAxaGMzTnBiV2xBVEVGUVZFOVFMVEJETkRZeE4xQlANCkFRSURCQT09DQotLS0tLUVORCBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS0="
          },
          {
            "name": "web-server-user",
            "label": "web-server-user",
            "customtype": "string",
            "type": "string",
            "immutable": true,
            "hidden": false,
            "required": false,
            "secured": false,
            "description": "web-server-user",
            "default": "ubuntu"
          },
          {
            "name": "credential_name",
            "label": "credential_name",
            "customtype": "string",
            "type": "string",
            "immutable": true,
            "hidden": false,
            "required": false,
            "secured": false,
            "description": "credential_name",
            "default": "${templates.credenti70962c42.output.credential_name}"
          },
          {
            "name": "inventory_name",
            "label": "inventory_name",
            "customtype": "string",
            "type": "string",
            "immutable": true,
            "hidden": false,
            "required": false,
            "secured": false,
            "description": "inventory_name",
            "default": "${templates.inventordc5a839f.output.inventory_name}"
          }
        ]
      },
      {
        "type": "custom",
        "name": "ans-act",
        "description": "Action used to define for ansible",
        "input_parameters": [
          {
            "name": "variable-test",
            "label": "Variable Test",
            "customtype": "map",
            "type": "map",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "description": "Variable Test",
            "default": {
              "test": "ciccio"
            },
            "editable": true
          }
        ],
        "flow": {
          "conditions": [],
          "templates": [
            {
              "Hello World": {
                "title": "Hello World_275218",
                "template_name": "Hello World",
                "version": "1.0",
                "id": "hellowor363822c9",
                "template_type": "ANSIBLE",
                "template_content_type": "ANSIBLE",
                "template_provider": "ANSIBLE",
                "instance_name": "",
                "cloud_connection_name": "AnsibleTower",
                "template_data_objects": {},
                "template_params": {
                  "inventory_name": "${svc_instance.output_parameters.inventory_name}",
                  "credential_name": "${svc_instance.output_parameters.credential_name}",
                  "extra_variables": "${input_parameters.variable-test}"
                },
                "outputs": [
                  "job_status"
                ],
                "error": false,
                "isErrorFlow": false,
                "editable": true
              }
            }
          ],
          "resthooks": [],
          "notifications": [],
          "sequence": {
            "0": "hellowor363822c9"
          },
          "error_sequence": {}
        },
        "output_parameters": []
      },
      {
        "type": "custom",
        "name": "ans-act-changed",
        "description": "Hello world changed",
        "input_parameters": [],
        "flow": {
          "conditions": [],
          "templates": [
            {
              "Hello World": {
                "title": "Hello World_2e3e09",
                "template_name": "Hello World",
                "version": "1.0",
                "id": "helloworfe25ad45",
                "template_type": "ANSIBLE",
                "template_content_type": "ANSIBLE",
                "template_provider": "ANSIBLE",
                "instance_name": "",
                "cloud_connection_name": "AnsibleTower",
                "template_data_objects": {},
                "template_params": {
                  "inventory_name": "${svc_instance.output_parameters.inventory_name}",
                  "credential_name": "${svc_instance.output_parameters.credential_name}",
                  "extra_variables": {
                    "test": "changed"
                  }
                },
                "outputs": [
                  "job_status"
                ],
                "error": false,
                "immutable": false
              }
            }
          ],
          "resthooks": [],
          "notifications": [],
          "sequence": {
            "0": "helloworfe25ad45"
          },
          "error_sequence": {}
        },
        "output_parameters": []
      },
      {
        "type": "bind",
        "name": "Bind",
        "description": "Deploy Switch NSX-T",
        "pre_or_post": false,
        "input_parameters": [
          {
            "name": "to",
            "label": "To",
            "customtype": "string",
            "type": "string",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "isDynamic": false,
            "editable": true,
            "default": "tonino.massimi@it.ibm.com"
          },
          {
            "name": "subject",
            "label": "Subject",
            "customtype": "string",
            "type": "string",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "description": "",
            "isDynamic": false,
            "editable": true,
            "default": "Bind done"
          },
          {
            "name": "body",
            "label": "Body",
            "customtype": "string",
            "type": "string",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "description": "",
            "isDynamic": false,
            "editable": true,
            "default": "Bind done"
          },
          {
            "name": "nsxt-sw-name",
            "label": "NSXT SW Name",
            "customtype": "sharedparameter",
            "type": "sharedparameter",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "description": "NSXT SW Name",
            "isDynamic": false,
            "editable": true,
            "default": "nsx-t-sw-name",
            "datatype": "nsx-t-switch_name"
          }
        ],
        "flow": {
          "conditions": [],
          "templates": [
            {
              "VMware NSX-T Sample to create a logical switch": {
                "title": "VMware NSX-T Sample to create a logical switch_246150",
                "template_name": "VMware NSX-T Sample to create a logical switch",
                "version": "2.3",
                "id": "vmwarensba4a3595",
                "template_type": "Terraform",
                "template_content_type": "VMware NSX-T",
                "template_provider": "VMware NSX-T",
                "instance_name": "",
                "cloud_connection_name": "NSX-T",
                "template_data_objects": {},
                "template_params": {
                  "nsxt_tag_scope": "ToniProject",
                  "nsxt_tag": "Toni",
                  "nsxt_transport_zone": "CAMDC2Zone",
                  "nsxt_logical_switch_name": "${datatypes.nsx-t-switch_name.nsxt-switch_name}",
                  "nsxt_logical_switch_desc": "Tonino Switch",
                  "nsxt_logical_switch_state": "UP",
                  "nsxt_logical_switch_repl_mode": "MTEP"
                },
                "outputs": [],
                "editable": true,
                "provider_engine_version": "0.11.11",
                "isErrorFlow": false
              }
            }
          ],
          "resthooks": [],
          "notifications": [
            {
              "emailnotification": {
                "title": "emailnotification_e75fa1",
                "type": "email",
                "receiverList": "${input_parameters.to}",
                "id": "emailnot157736ac",
                "sender": "CAMadmin",
                "copyToList": "",
                "subject": "${input_parameters.subject}",
                "body": "${input_parameters.body}",
                "editable": true
              }
            }
          ],
          "sequence": {
            "0": "vmwarensba4a3595",
            "1": "emailnot157736ac"
          },
          "error_sequence": {}
        },
        "output_parameters": []
      }
    ],
    "plans": [
      {
        "name": "Standard",
        "description": "To deploy a Standard plan",
        "actions": [],
        "plan_parameters": []
      }
    ],
    "version": "4.0.0.0",
    "upgrade_from": [],
    "downgrade_to": []
  }
}