{
  "service": {
    "version": "1.0.0.0",
    "specVersion": "v3",
    "catalog_metadata": {
      "name": "Test ansible-actions-vmware",
      "description": "",
      "image": "serviceicon_1.svg",
      "category": "Ansible",
      "bullets": [],
      "providerDisplayName": "IBM",
      "longDescription": "",
      "documentationUrl": "",
      "supportUrl": "",
      "bindable": false,
      "updatable": "",
      "systemTags": true
    },
    "tags": [
      {
        "name": "request_group",
        "label": "request_group",
        "type": "string",
        "immutable": true,
        "hidden": false,
        "required": false,
        "secured": false,
        "description": "The current context group id of the current user that requested the provisioning of the template. This is important because a user may be part of more than one group and this identifies the context of which group the user made the request.",
        "isSystemTag": true,
        "default": "${svc_instance.group}",
        "customtype": "string",
        "permission": "Read-Only"
      },
      {
        "name": "request_user",
        "label": "request_user",
        "type": "string",
        "immutable": true,
        "hidden": false,
        "required": false,
        "secured": false,
        "description": "The user id of the current user that requested the provisioning of the template.",
        "isSystemTag": true,
        "default": "${svc_instance.owner}",
        "customtype": "string",
        "permission": "Read-Only"
      },
      {
        "name": "service_name",
        "label": "service_name",
        "type": "string",
        "immutable": true,
        "hidden": false,
        "required": false,
        "secured": false,
        "description": "Name provided for the service instance by the end user at time of request",
        "isSystemTag": true,
        "default": "${svc_instance.name}",
        "customtype": "string",
        "permission": "Read-Only"
      },
      {
        "name": "service_identifier",
        "label": "service_identifier",
        "type": "string",
        "immutable": true,
        "hidden": false,
        "required": false,
        "secured": false,
        "description": "Unique identifer generated by ICAM which is mapped to the service instance of the template provisioned.",
        "isSystemTag": true,
        "default": "${svc_instance.service_instance_id}",
        "customtype": "string",
        "permission": "Read-Only"
      }
    ],
    "actions": [
      {
        "type": "provision",
        "name": "Provision",
        "description": "Default action for deployment of service",
        "input_parameters": [
          {
            "name": "creds",
            "label": "Credentials",
            "customtype": "string",
            "type": "string",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "description": "Credentials",
            "isDynamic": false,
            "default": "svt-test-vmware-01-inst_SVT-MongoDB-Creds",
            "passbyname": false,
            "dynamicDetails": {}
          },
          {
            "name": "invent",
            "label": "Inventory",
            "customtype": "string",
            "type": "string",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "description": "Inventory",
            "isDynamic": false,
            "default": "svt-test-vmware-02-inst_SVT-MongoDB-Inve",
            "passbyname": false,
            "dynamicDetails": {}
          }
        ],
        "flow": {
          "conditions": [],
          "templates": [
            {
              "System Information svt new": {
                "title": "System Information svt new_3e6ac1",
                "template_name": "System Information svt new",
                "version": "1.0",
                "id": "systeminb0a98590",
                "template_type": "ANSIBLE",
                "template_content_type": "ANSIBLE",
                "template_provider": "ANSIBLE",
                "instance_name": "",
                "cloud_connection_name": "AnsibleTower",
                "template_data_objects": {},
                "template_params": {
                  "inventory_name": "${input_parameters.invent}",
                  "credential_name": "${input_parameters.creds}",
                  "extra_variables": {}
                },
                "outputs": [
                  "job_status"
                ],
                "immutable": false,
                "isErrorFlow": false
              }
            }
          ],
          "resthooks": [],
          "notifications": [
            {
              "emailnotification": {
                "title": "emailnotification_abbc3f",
                "type": "email",
                "receiverList": "tonino.massimi@it.ibm.com",
                "id": "emailnot096687c8",
                "sender": "CAMadmin",
                "copyToList": "",
                "subject": "Result of Ansible job \"System Information svt new\"",
                "body": "Inventory Name\t\t: ${templates.systeminb0a98590.inventory_name}\nCredential Name\t\t: ${templates.systeminb0a98590.credential_name}\nExtra Variable\t\t: ${templates.systeminb0a98590.extra_variables}\nInstance Name\t\t: ${templates.systeminb0a98590.instance_name}\nTemplate Name\t\t: ${templates.systeminb0a98590.template_name}\nTemplate Version\t: ${templates.systeminb0a98590.template_version}\nTitle\t\t\t: ${templates.systeminb0a98590.title}\nStack ID\t\t: ${templates.systeminb0a98590.stack_ID}\nAction\t\t\t: ${templates.systeminb0a98590.action}\nStatus\t\t\t: ${templates.systeminb0a98590.status}\nStatus Message\t\t: ${templates.systeminb0a98590.status_message}\nStack Error Msg\t\t: ${templates.systeminb0a98590.stack_error_message}",
                "immutable": false
              }
            }
          ],
          "sequence": {
            "0": "systeminb0a98590",
            "1": "emailnot096687c8"
          },
          "error_sequence": {}
        },
        "output_parameters": [
          {
            "name": "crede",
            "label": "Credential",
            "customtype": "string",
            "type": "string",
            "immutable": true,
            "hidden": false,
            "required": false,
            "secured": false,
            "description": "Credential",
            "default": "${input_parameters.creds}"
          },
          {
            "name": "invento",
            "label": "Inventory",
            "customtype": "string",
            "type": "string",
            "immutable": true,
            "hidden": false,
            "required": false,
            "secured": false,
            "description": "Inventory",
            "default": "${input_parameters.invent}"
          }
        ]
      },
      {
        "type": "custom",
        "name": "test act",
        "description": "Action to test ansible jobs",
        "input_parameters": [
          {
            "name": "var-mongo",
            "label": "Variable MongoDB",
            "customtype": "map",
            "type": "map",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "description": "Variable for MongoDB",
            "isDynamic": false,
            "default": {
              "database": "mydb",
              "jsfile": "/root/myfile.js",
              "insert": "db.myCollection.insert([{'name': 'Alice', 'age': 30},{'name': 'Bill', 'age': 25},{'name': 'Bob', 'age': 35}])",
              "chksize": "db.stats().dataSize",
              "backup": "mongodump",
              "bkppath": "~/backups/mybd_backup_001",
              "dropdb": "db.dropDatabase()",
              "restore": "mongorestore",
              "find": "db.myCollection.find()",
              "showdb": "show databases"
            }
          }
        ],
        "flow": {
          "conditions": [],
          "templates": [
            {
              "Test MongoDB": {
                "title": "Test MongoDB_d6bf53",
                "template_name": "Test MongoDB",
                "version": "1.0",
                "id": "testmong376601fd",
                "template_type": "ANSIBLE",
                "template_content_type": "ANSIBLE",
                "template_provider": "ANSIBLE",
                "instance_name": "",
                "cloud_connection_name": "AnsibleTower",
                "template_data_objects": {},
                "template_params": {
                  "inventory_name": "${svc_instance.output_parameters.invento}",
                  "credential_name": "${svc_instance.output_parameters.crede}",
                  "extra_variables": "${input_parameters.var-mongo}"
                },
                "outputs": [
                  "job_status"
                ],
                "immutable": false
              }
            }
          ],
          "resthooks": [],
          "notifications": [],
          "sequence": {
            "0": "testmong376601fd"
          },
          "error_sequence": {}
        },
        "output_parameters": []
      },
      {
        "type": "custom",
        "name": "Show Mongo Databases",
        "description": "Show Mongo Databases",
        "input_parameters": [
          {
            "name": "var-mongo",
            "label": "Variable MongoDB",
            "customtype": "map",
            "type": "map",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "description": "Variable for MongoDB",
            "isDynamic": false,
            "default": {
              "showdb": "show databases",
              "jsfile": "/root/showdatabases.js"
            }
          }
        ],
        "flow": {
          "conditions": [],
          "templates": [
            {
              "Show Mongo DB": {
                "title": "Show Mongo DB_d5a77c",
                "template_name": "Show Mongo DB",
                "version": "1.0",
                "id": "showmongd41c309d",
                "template_type": "ANSIBLE",
                "template_content_type": "ANSIBLE",
                "template_provider": "ANSIBLE",
                "instance_name": "",
                "cloud_connection_name": "AnsibleTower",
                "template_data_objects": {},
                "template_params": {
                  "inventory_name": "${svc_instance.output_parameters.invento}",
                  "credential_name": "${svc_instance.output_parameters.crede}",
                  "extra_variables": "${input_parameters.var-mongo}"
                },
                "outputs": [
                  "job_status"
                ],
                "immutable": false
              }
            }
          ],
          "resthooks": [],
          "notifications": [],
          "sequence": {
            "0": "showmongd41c309d"
          },
          "error_sequence": {}
        },
        "output_parameters": []
      },
      {
        "type": "custom",
        "name": "Check MongoDB size",
        "description": "Check the Database size",
        "input_parameters": [
          {
            "name": "var-mongo",
            "label": "Variable MongoDB",
            "customtype": "map",
            "type": "map",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "description": "Variable for MongoDB",
            "isDynamic": false,
            "default": {
              "database": "mydb",
              "jsfile": "/root/checksize.js",
              "chksize": "db.stats().dataSize"
            }
          }
        ],
        "flow": {
          "conditions": [],
          "templates": [
            {
              "Check Mongo DB Size": {
                "title": "Check Mongo DB Size_34203e",
                "template_name": "Check Mongo DB Size",
                "version": "1.0",
                "id": "checkmona6537b78",
                "template_type": "ANSIBLE",
                "template_content_type": "ANSIBLE",
                "template_provider": "ANSIBLE",
                "instance_name": "",
                "cloud_connection_name": "AnsibleTower",
                "template_data_objects": {},
                "template_params": {
                  "inventory_name": "${svc_instance.output_parameters.invento}",
                  "credential_name": "${svc_instance.output_parameters.crede}",
                  "extra_variables": "${input_parameters.var-mongo}"
                },
                "outputs": [
                  "job_status"
                ],
                "immutable": false
              }
            }
          ],
          "resthooks": [],
          "notifications": [],
          "sequence": {
            "0": "checkmona6537b78"
          },
          "error_sequence": {}
        },
        "output_parameters": []
      },
      {
        "type": "custom",
        "name": "Populate table MongoDB",
        "description": "Populate table MongoDB",
        "input_parameters": [
          {
            "name": "var-mongo",
            "label": "Variable MongoDB",
            "customtype": "map",
            "type": "map",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "description": "Variable for MongoDB",
            "isDynamic": false,
            "default": {
              "jsfile": "/root/populate.js"
            }
          }
        ],
        "flow": {
          "conditions": [],
          "templates": [
            {
              "Populate myCollection Mongo DB": {
                "title": "Populate myCollection Mongo DB_675c25",
                "template_name": "Populate myCollection Mongo DB",
                "version": "1.0",
                "id": "populate3bcd57ab",
                "template_type": "ANSIBLE",
                "template_content_type": "ANSIBLE",
                "template_provider": "ANSIBLE",
                "instance_name": "",
                "cloud_connection_name": "AnsibleTower",
                "template_data_objects": {},
                "template_params": {
                  "inventory_name": "${svc_instance.output_parameters.invento}",
                  "credential_name": "${svc_instance.output_parameters.crede}",
                  "extra_variables": "${input_parameters.var-mongo}"
                },
                "outputs": [
                  "job_status"
                ],
                "immutable": false
              }
            }
          ],
          "resthooks": [],
          "notifications": [],
          "sequence": {
            "0": "populate3bcd57ab"
          },
          "error_sequence": {}
        },
        "output_parameters": []
      },
      {
        "type": "custom",
        "name": "Backup DB mongoDB",
        "description": "Backup DB mongoDB",
        "input_parameters": [
          {
            "name": "var-mongo",
            "label": "Variable MongoDB",
            "customtype": "map",
            "type": "map",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "description": "Variable for MongoDB",
            "isDynamic": false,
            "default": {
              "database": "mydb",
              "backup": "mongodump",
              "bkppath": "~/backups/my_backup_001"
            }
          }
        ],
        "flow": {
          "conditions": [],
          "templates": [
            {
              "Backup Mongo DB": {
                "title": "Backup Mongo DB_db1214",
                "template_name": "Backup Mongo DB",
                "version": "1.0",
                "id": "backupmo41dbc7d7",
                "template_type": "ANSIBLE",
                "template_content_type": "ANSIBLE",
                "template_provider": "ANSIBLE",
                "instance_name": "",
                "cloud_connection_name": "AnsibleTower",
                "template_data_objects": {},
                "template_params": {
                  "inventory_name": "${svc_instance.output_parameters.invento}",
                  "credential_name": "${svc_instance.output_parameters.crede}",
                  "extra_variables": "${input_parameters.var-mongo}"
                },
                "outputs": [
                  "job_status"
                ],
                "immutable": false
              }
            }
          ],
          "resthooks": [],
          "notifications": [],
          "sequence": {
            "0": "backupmo41dbc7d7"
          },
          "error_sequence": {}
        },
        "output_parameters": []
      },
      {
        "type": "custom",
        "name": "Drop DB MongoDB",
        "description": "Drop DB MongoDB",
        "input_parameters": [
          {
            "name": "var-mongo",
            "label": "Variable MongoDB",
            "customtype": "map",
            "type": "map",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "description": "Variable for MongoDB",
            "isDynamic": false,
            "default": {
              "database": "mydb",
              "dropdb": "db.dropDatabase()",
              "jsfile": "/root/dropdatabase.js"
            }
          }
        ],
        "flow": {
          "conditions": [],
          "templates": [
            {
              "Drop DB Mongo DB": {
                "title": "Drop DB Mongo DB_daf364",
                "template_name": "Drop DB Mongo DB",
                "version": "1.0",
                "id": "dropdbmoe387f8a4",
                "template_type": "ANSIBLE",
                "template_content_type": "ANSIBLE",
                "template_provider": "ANSIBLE",
                "instance_name": "",
                "cloud_connection_name": "AnsibleTower",
                "template_data_objects": {},
                "template_params": {
                  "inventory_name": "${svc_instance.output_parameters.invento}",
                  "credential_name": "${svc_instance.output_parameters.crede}",
                  "extra_variables": "${input_parameters.var-mongo}"
                },
                "outputs": [
                  "job_status"
                ],
                "immutable": false
              }
            }
          ],
          "resthooks": [],
          "notifications": [],
          "sequence": {
            "0": "dropdbmoe387f8a4"
          },
          "error_sequence": {}
        },
        "output_parameters": []
      },
      {
        "type": "custom",
        "name": "Insert Mongo DB",
        "description": "Insert Mongo DB",
        "input_parameters": [
          {
            "name": "var-mongo",
            "label": "Variable MongoDB",
            "customtype": "map",
            "type": "map",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "description": "Variable for MongoDB",
            "isDynamic": false,
            "default": {
              "database": "mydb",
              "jsfile": "/root/populate1.js"
            }
          }
        ],
        "flow": {
          "conditions": [],
          "templates": [
            {
              "Insert Mongo DB table": {
                "title": "Insert Mongo DB table_1b92ec",
                "template_name": "Insert Mongo DB table",
                "version": "1.0",
                "id": "insertmo93aa8428",
                "template_type": "ANSIBLE",
                "template_content_type": "ANSIBLE",
                "template_provider": "ANSIBLE",
                "instance_name": "",
                "cloud_connection_name": "AnsibleTower",
                "template_data_objects": {},
                "template_params": {
                  "inventory_name": "${svc_instance.output_parameters.invento}",
                  "credential_name": "${svc_instance.output_parameters.crede}",
                  "extra_variables": "${input_parameters.var-mongo}"
                },
                "outputs": [
                  "job_status"
                ],
                "immutable": false
              }
            }
          ],
          "resthooks": [],
          "notifications": [],
          "sequence": {
            "0": "insertmo93aa8428"
          },
          "error_sequence": {}
        },
        "output_parameters": []
      },
      {
        "type": "custom",
        "name": "Populate table1 MongoDB",
        "description": "Populate table1 MongoDB",
        "input_parameters": [
          {
            "name": "var-mongo",
            "label": "Variable MongoDB",
            "customtype": "map",
            "type": "map",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "description": "Variable for MongoDB",
            "isDynamic": false,
            "default": {
              "jsfile": "/root/populate1.js"
            }
          }
        ],
        "flow": {
          "conditions": [],
          "templates": [
            {
              "Populate myCollection1 Mongo DB": {
                "title": "Populate myCollection1 Mongo DB_34a10f",
                "template_name": "Populate myCollection1 Mongo DB",
                "version": "1.0",
                "id": "populate9531c9f3",
                "template_type": "ANSIBLE",
                "template_content_type": "ANSIBLE",
                "template_provider": "ANSIBLE",
                "instance_name": "",
                "cloud_connection_name": "AnsibleTower",
                "template_data_objects": {},
                "template_params": {
                  "inventory_name": "${svc_instance.output_parameters.invento}",
                  "credential_name": "${svc_instance.output_parameters.crede}",
                  "extra_variables": "${input_parameters.var-mongo}"
                },
                "outputs": [
                  "job_status"
                ],
                "immutable": false
              }
            }
          ],
          "resthooks": [],
          "notifications": [],
          "sequence": {
            "0": "populate9531c9f3"
          },
          "error_sequence": {}
        },
        "output_parameters": []
      },
      {
        "type": "custom",
        "name": "List Collection MongoDB",
        "description": "List Collection MongoDB",
        "input_parameters": [
          {
            "name": "var-mongo",
            "label": "Variable MongoDB",
            "customtype": "map",
            "type": "map",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "description": "Variable for MongoDB",
            "isDynamic": false,
            "default": {
              "database": "mydb",
              "find": "db.myCollection.find()",
              "jsfile": "/root/find.js"
            }
          }
        ],
        "flow": {
          "conditions": [],
          "templates": [
            {
              "List Collection Mongo DB": {
                "title": "List Collection Mongo DB_49f332",
                "template_name": "List Collection Mongo DB",
                "version": "1.0",
                "id": "listcollf8174651",
                "template_type": "ANSIBLE",
                "template_content_type": "ANSIBLE",
                "template_provider": "ANSIBLE",
                "instance_name": "",
                "cloud_connection_name": "AnsibleTower",
                "template_data_objects": {},
                "template_params": {
                  "inventory_name": "${svc_instance.output_parameters.invento}",
                  "credential_name": "${svc_instance.output_parameters.crede}",
                  "extra_variables": "${input_parameters.var-mongo}"
                },
                "outputs": [
                  "job_status"
                ],
                "immutable": false
              }
            }
          ],
          "resthooks": [],
          "notifications": [],
          "sequence": {
            "0": "listcollf8174651"
          },
          "error_sequence": {}
        },
        "output_parameters": []
      },
      {
        "type": "custom",
        "name": "Restore Backup MongoDB",
        "description": "Restore Backup MongoDB",
        "input_parameters": [
          {
            "name": "var-mongo",
            "label": "Variable MongoDB",
            "customtype": "map",
            "type": "map",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "description": "Variable for MongoDB",
            "isDynamic": false,
            "default": {
              "bkppath": "~/backups/my_backup_001",
              "restore": "mongorestore"
            }
          }
        ],
        "flow": {
          "conditions": [],
          "templates": [
            {
              "Restore Backup Mongo DB": {
                "title": "Restore Backup Mongo DB_db36ad",
                "template_name": "Restore Backup Mongo DB",
                "version": "1.0",
                "id": "restorebc2204f9f",
                "template_type": "ANSIBLE",
                "template_content_type": "ANSIBLE",
                "template_provider": "ANSIBLE",
                "instance_name": "",
                "cloud_connection_name": "AnsibleTower",
                "template_data_objects": {},
                "template_params": {
                  "inventory_name": "${svc_instance.output_parameters.invento}",
                  "credential_name": "${svc_instance.output_parameters.crede}",
                  "extra_variables": "${input_parameters.var-mongo}"
                },
                "outputs": [
                  "job_status"
                ],
                "immutable": false
              }
            }
          ],
          "resthooks": [],
          "notifications": [],
          "sequence": {
            "0": "restorebc2204f9f"
          },
          "error_sequence": {}
        },
        "output_parameters": []
      }
    ],
    "plans": [
      {
        "name": "Standard",
        "description": "To deploy a Standard plan",
        "actions": [],
        "plan_parameters": []
      }
    ]
  }
}